{"version":3,"file":"field-editor-multiple-line.cjs.production.min.js","sources":["../src/styles.ts","../src/MultipleLineEditor.tsx"],"sourcesContent":["import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport const validationRow = css({\n  display: 'flex',\n  justifyContent: 'space-between',\n  fontSize: tokens.fontSizeM,\n  marginTop: tokens.spacingXs,\n  color: tokens.gray700,\n});\n\nexport const rightToLeft = css({\n  direction: 'rtl',\n});\n","import * as React from 'react';\nimport {\n  FieldAPI,\n  LocalesAPI,\n  FieldConnector,\n  CharCounter,\n  CharValidation,\n  ConstraintsUtils,\n} from '@contentful/field-editor-shared';\nimport * as styles from './styles';\n\nimport { Textarea } from '@contentful/f36-components';\n\nexport interface MultipleLineEditorProps {\n  /**\n   * is the field disabled initially\n   */\n  isInitiallyDisabled: boolean;\n\n  /**\n   * whether char validation should be shown or not\n   */\n  withCharValidation: boolean;\n\n  /**\n   * sdk.field\n   */\n  field: FieldAPI;\n\n  /**\n   * sdk.locales\n   */\n  locales: LocalesAPI;\n}\n\nexport function MultipleLineEditor(props: MultipleLineEditorProps) {\n  const { field, locales, isInitiallyDisabled, withCharValidation } = props;\n\n  const constraints = ConstraintsUtils.fromFieldValidations(\n    field.validations,\n    field.type as 'Text'\n  );\n  const checkConstraint = ConstraintsUtils.makeChecker(constraints);\n  const direction = locales.direction[field.locale] || 'ltr';\n\n  return (\n    <FieldConnector<string> field={field} isInitiallyDisabled={isInitiallyDisabled}>\n      {({ errors, disabled, value, setValue }) => {\n        return (\n          <div data-test-id=\"multiple-line-editor\">\n            <Textarea\n              className={direction === 'rtl' ? styles.rightToLeft : ''}\n              rows={3}\n              isRequired={field.required}\n              isInvalid={errors.length > 0}\n              isDisabled={disabled}\n              value={value || ''}\n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n                setValue(e.target.value);\n              }}\n            />\n            {withCharValidation && (\n              <div className={styles.validationRow}>\n                <CharCounter value={value || ''} checkConstraint={checkConstraint} />\n                <CharValidation constraints={constraints} />\n              </div>\n            )}\n            {!withCharValidation && (\n              <div className={styles.validationRow}>\n                <CharCounter value={value || ''} checkConstraint={() => true} />\n              </div>\n            )}\n          </div>\n        );\n      }}\n    </FieldConnector>\n  );\n}\n\nMultipleLineEditor.defaultProps = {\n  isInitiallyDisabled: true,\n  withCharValidation: true,\n};\n"],"names":["validationRow","css","display","justifyContent","fontSize","tokens","fontSizeM","marginTop","spacingXs","color","gray700","rightToLeft","direction","MultipleLineEditor","props","field","locales","isInitiallyDisabled","withCharValidation","constraints","ConstraintsUtils","fromFieldValidations","validations","type","checkConstraint","makeChecker","locale","React","FieldConnector","value","setValue","Textarea","className","styles","rows","isRequired","required","isInvalid","errors","length","isDisabled","disabled","onChange","e","target","CharCounter","CharValidation","defaultProps"],"mappings":"8RAGaA,EAAgBC,MAAI,CAC/BC,QAAS,OACTC,eAAgB,gBAChBC,SAAUC,EAAOC,UACjBC,UAAWF,EAAOG,UAClBC,MAAOJ,EAAOK,UAGHC,EAAcV,MAAI,CAC7BW,UAAW,iBCuBGC,EAAmBC,OACzBC,EAA4DD,EAA5DC,MAAOC,EAAqDF,EAArDE,QAASC,EAA4CH,EAA5CG,oBAAqBC,EAAuBJ,EAAvBI,mBAEvCC,EAAcC,mBAAiBC,qBACnCN,EAAMO,YACNP,EAAMQ,MAEFC,EAAkBJ,mBAAiBK,YAAYN,GAC/CP,EAAYI,EAAQJ,UAAUG,EAAMW,SAAW,aAGnDC,gBAACC,kBAAuBb,MAAOA,EAAOE,oBAAqBA,IACxD,gBAAqBY,IAAAA,MAAOC,IAAAA,gBAEzBH,sCAAkB,wBAChBA,gBAACI,YACCC,UAAyB,QAAdpB,EAAsBqB,EAAqB,GACtDC,KAAM,EACNC,WAAYpB,EAAMqB,SAClBC,YAPJC,OAOsBC,OAAS,EAC3BC,aARIC,SASJZ,MAAOA,GAAS,GAChBa,SAAU,SAACC,GACTb,EAASa,EAAEC,OAAOf,UAGrBX,GACCS,uBAAKK,UAAWC,GACdN,gBAACkB,eAAYhB,MAAOA,GAAS,GAAIL,gBAAiBA,IAClDG,gBAACmB,kBAAe3B,YAAaA,MAG/BD,GACAS,uBAAKK,UAAWC,GACdN,gBAACkB,eAAYhB,MAAOA,GAAS,GAAIL,gBAAiB,kBAAM,UAUxEX,EAAmBkC,aAAe,CAChC9B,qBAAqB,EACrBC,oBAAoB"}