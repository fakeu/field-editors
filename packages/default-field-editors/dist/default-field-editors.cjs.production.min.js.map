{"version":3,"file":"default-field-editors.cjs.production.min.js","sources":["../src/getDefaultWidgetId.ts","../src/Field.tsx","../src/FieldWrapper.styles.ts","../src/FieldWrapper.tsx"],"sourcesContent":["import { editorInterfaceDefaults } from 'contentful-management';\n\nimport type { FieldExtensionSDK } from '@contentful/field-editor-shared';\nimport type { WidgetType } from './types';\n\nexport function getDefaultWidgetId(\n  sdk: Pick<FieldExtensionSDK, 'field' | 'contentType'>\n): WidgetType {\n  const field = sdk.field;\n\n  // @ts-expect-error FieldExtensionSDK.field doesn't include all the\n  // properties of ContentFields type. It should be fixed\n  return editorInterfaceDefaults.default.getDefaultControlOfField(field).widgetId;\n}\n","import * as React from 'react';\nimport { NumberEditor } from '@contentful/field-editor-number';\nimport { SingleLineEditor } from '@contentful/field-editor-single-line';\nimport { BooleanEditor } from '@contentful/field-editor-boolean';\nimport { DateEditor } from '@contentful/field-editor-date';\nimport { LocationEditor } from '@contentful/field-editor-location';\nimport { JsonEditor } from '@contentful/field-editor-json';\nimport { MultipleLineEditor } from '@contentful/field-editor-multiple-line';\nimport { TagsEditor } from '@contentful/field-editor-tags';\nimport { SlugEditor } from '@contentful/field-editor-slug';\nimport { DropdownEditor } from '@contentful/field-editor-dropdown';\nimport { UrlEditor } from '@contentful/field-editor-url';\nimport { RadioEditor } from '@contentful/field-editor-radio';\nimport { RatingEditor } from '@contentful/field-editor-rating';\nimport { CheckboxEditor } from '@contentful/field-editor-checkbox';\nimport { ListEditor } from '@contentful/field-editor-list';\nimport {\n  SingleEntryReferenceEditor,\n  MultipleEntryReferenceEditor,\n  SingleMediaEditor,\n  MultipleMediaEditor,\n} from '@contentful/field-editor-reference';\nimport { RichTextEditor } from '@contentful/field-editor-rich-text';\nimport { MarkdownEditor } from '@contentful/field-editor-markdown';\nimport type { FieldExtensionSDK } from '@contentful/field-editor-shared';\nimport type { EditorOptions, WidgetType } from './types';\nimport { getDefaultWidgetId } from './getDefaultWidgetId';\n\ntype FieldProps = {\n  sdk: FieldExtensionSDK;\n  widgetId?: WidgetType;\n  isInitiallyDisabled?: boolean;\n  renderFieldEditor?: (\n    widgetId: WidgetType,\n    sdk: FieldExtensionSDK,\n    isInitiallyDisabled: boolean\n  ) => JSX.Element | false;\n  getOptions?: (widgetId: WidgetType, sdk: FieldExtensionSDK) => EditorOptions;\n};\n\nconst widgetComponents: Record<string, [React.ComponentType<any>, any?]> = {\n  multipleLine: [MultipleLineEditor],\n  boolean: [BooleanEditor],\n  objectEditor: [JsonEditor],\n  datePicker: [DateEditor],\n  locationEditor: [LocationEditor],\n  checkbox: [CheckboxEditor],\n  listInput: [ListEditor],\n  rating: [RatingEditor],\n  radio: [RadioEditor],\n  tagEditor: [TagsEditor],\n  numberEditor: [NumberEditor],\n  urlEditor: [UrlEditor],\n  slugEditor: [SlugEditor],\n  singleLine: [SingleLineEditor],\n  dropdown: [DropdownEditor],\n  entryLinkEditor: [SingleEntryReferenceEditor, { viewType: 'link', hasCardEditActions: true }],\n  entryCardEditor: [SingleEntryReferenceEditor, { viewType: 'card', hasCardEditActions: true }],\n  entryLinksEditor: [MultipleEntryReferenceEditor, { viewType: 'link', hasCardEditActions: true }],\n  entryCardsEditor: [MultipleEntryReferenceEditor, { viewType: 'card', hasCardEditActions: true }],\n  assetLinkEditor: [SingleMediaEditor, { viewType: 'link' }],\n  assetLinksEditor: [MultipleMediaEditor, { viewType: 'link' }],\n  assetGalleryEditor: [MultipleMediaEditor, { viewType: 'card' }],\n  richTextEditor: [RichTextEditor],\n  markdown: [MarkdownEditor],\n};\n\nexport const Field: React.FC<FieldProps> = (props: FieldProps) => {\n  const {\n    sdk,\n    widgetId: possiblyUndefinedWidgetId,\n    isInitiallyDisabled = false,\n    renderFieldEditor,\n    getOptions,\n  } = props;\n  const field = sdk.field;\n  const locales = sdk.locales;\n\n  const widgetId = possiblyUndefinedWidgetId ?? getDefaultWidgetId(sdk);\n\n  if (renderFieldEditor) {\n    const customEditor = renderFieldEditor(widgetId, sdk, isInitiallyDisabled);\n    if (customEditor) {\n      return customEditor;\n    }\n  }\n\n  const options = getOptions ? getOptions(widgetId, sdk) : {};\n  const referenceEditorParams =\n    sdk.parameters && 'instance' in sdk.parameters\n      ? sdk.parameters\n      : {\n          instance: {\n            showCreateEntityAction: true,\n            showLinkEntityAction: true,\n          },\n        };\n\n  if (!widgetComponents[widgetId]) return null;\n\n  const [WidgetComponent, widgetStaticProps] = widgetComponents[widgetId];\n\n  const widgetComponentProps = {\n    sdk,\n    field,\n    locales,\n    isInitiallyDisabled,\n    parameters: referenceEditorParams,\n    ...widgetStaticProps,\n    // @ts-expect-error\n    ...options[widgetId],\n  };\n\n  const baseSdk = widgetId === 'slugEditor' ? sdk : undefined;\n\n  return <WidgetComponent key={sdk.field.locale} {...widgetComponentProps} baseSdk={baseSdk} />;\n};\n","import { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\nexport const styles = {\n  withFocusBar: css({\n    marginLeft: tokens.spacingL,\n    marginRight: tokens.spacingL,\n    marginBottom: '29px',\n    marginTop: '19px',\n    paddingLeft: tokens.spacingM,\n    borderLeft: `3px solid ${tokens.gray300}`,\n    transition: 'border-color 0.18s linear',\n    '&:focus-within': {\n      borderColor: tokens.colorPrimary,\n    },\n    '&[aria-invalid=\"true\"]': {\n      borderLeftColor: tokens.red500,\n    },\n  }),\n  label: css({\n    display: 'flex',\n    width: '100%',\n    maxWidth: '800px',\n    color: tokens.gray500,\n    fontSize: tokens.fontSizeM,\n    fontWeight: tokens.fontWeightNormal,\n    lineHeight: tokens.lineHeightDefault,\n    whiteSpace: 'pre-wrap',\n  }),\n  helpText: css({\n    margin: `${tokens.spacingXs} 0`,\n    fontStyle: 'italic',\n  }),\n};\n","import * as React from 'react';\nimport { cx } from 'emotion';\nimport { FormControl } from '@contentful/f36-components';\nimport { ValidationErrors } from '@contentful/field-editor-validation-errors';\nimport type { FieldExtensionSDK, Entry } from '@contentful/field-editor-shared';\nimport { styles } from './FieldWrapper.styles';\n\ntype FieldWrapperProps = {\n  name: string;\n  sdk: FieldExtensionSDK;\n  /**\n   * Generates a link to another entry with the same value when a \"non unique\" validation error occurs\n   */\n  getEntryURL?: (entry: Entry) => string;\n  className?: string;\n  showFocusBar?: boolean;\n  children: React.ReactNode;\n  renderHeading?: (name: string) => JSX.Element | null;\n  renderHelpText?: (helpText: string) => JSX.Element | null;\n};\n\nexport const FieldWrapper: React.FC<FieldWrapperProps> = function (props: FieldWrapperProps) {\n  const { ids } = props.sdk;\n  const defaultGetEntryUrl = (entry: Entry) =>\n    `/spaces/${ids.space}/environments/${ids.environmentAlias || ids.environment}/entries/${\n      entry.sys.id\n    }`;\n  const {\n    name,\n    sdk,\n    className,\n    children,\n    renderHeading,\n    renderHelpText,\n    showFocusBar = true,\n    getEntryURL = defaultGetEntryUrl,\n  } = props;\n  const { field } = sdk;\n  const helpText = (sdk.parameters?.instance as any)?.helpText ?? '';\n\n  const [hasErrors, setHasErrors] = React.useState(false);\n  React.useEffect(() => {\n    return field.onSchemaErrorsChanged((errors: unknown[]) => {\n      setHasErrors((errors || []).length > 0);\n    });\n  }, [field]);\n\n  const fieldControlId = [field.id, field.locale, sdk.contentType?.sys?.id]\n    .filter((item) => item)\n    .join('-');\n\n  return (\n    <FormControl\n      id={fieldControlId}\n      testId=\"entity-field-controls\"\n      data-test-id=\"entity-field-controls\"\n      className={cx(showFocusBar && styles.withFocusBar, className)}\n      aria-invalid={hasErrors}\n      isRequired={field.required}>\n      {renderHeading ? (\n        renderHeading(name)\n      ) : (\n        <FormControl.Label className={styles.label}>{name}</FormControl.Label>\n      )}\n\n      {children}\n\n      <ValidationErrors\n        field={field}\n        space={sdk.space}\n        locales={sdk.locales}\n        getEntryURL={getEntryURL || defaultGetEntryUrl}\n      />\n\n      {renderHelpText ? (\n        renderHelpText(helpText)\n      ) : (\n        <FormControl.HelpText testId=\"field-hint\" className={styles.helpText}>\n          {helpText}\n        </FormControl.HelpText>\n      )}\n    </FormControl>\n  );\n};\n"],"names":["getDefaultWidgetId","sdk","editorInterfaceDefaults","getDefaultControlOfField","field","widgetId","widgetComponents","multipleLine","MultipleLineEditor","BooleanEditor","objectEditor","JsonEditor","datePicker","DateEditor","locationEditor","LocationEditor","checkbox","CheckboxEditor","listInput","ListEditor","rating","RatingEditor","radio","RadioEditor","tagEditor","TagsEditor","numberEditor","NumberEditor","urlEditor","UrlEditor","slugEditor","SlugEditor","singleLine","SingleLineEditor","dropdown","DropdownEditor","entryLinkEditor","SingleEntryReferenceEditor","viewType","hasCardEditActions","entryCardEditor","entryLinksEditor","MultipleEntryReferenceEditor","entryCardsEditor","assetLinkEditor","SingleMediaEditor","assetLinksEditor","MultipleMediaEditor","assetGalleryEditor","richTextEditor","RichTextEditor","markdown","MarkdownEditor","styles","withFocusBar","css","marginLeft","tokens","spacingL","marginRight","marginBottom","marginTop","paddingLeft","spacingM","borderLeft","gray300","transition","borderColor","colorPrimary","borderLeftColor","red500","label","display","width","maxWidth","color","gray500","fontSize","fontSizeM","fontWeight","fontWeightNormal","lineHeight","lineHeightDefault","whiteSpace","helpText","margin","spacingXs","fontStyle","props","possiblyUndefinedWidgetId","isInitiallyDisabled","renderFieldEditor","getOptions","locales","customEditor","options","WidgetComponent","widgetComponentProps","parameters","instance","showCreateEntityAction","showLinkEntityAction","React","key","locale","baseSdk","undefined","ids","defaultGetEntryUrl","entry","space","environmentAlias","environment","sys","id","name","className","children","renderHeading","renderHelpText","showFocusBar","getEntryURL","_sdk$parameters","_sdk$parameters$insta2","hasErrors","setHasErrors","onSchemaErrorsChanged","errors","length","fieldControlId","contentType","_sdk$contentType","_sdk$contentType$sys","filter","item","join","FormControl","testId","cx","isRequired","required","Label","ValidationErrors","HelpText"],"mappings":"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"}