{"version":3,"file":"field-editor-date.cjs.development.js","sources":["../src/DatepickerInput.tsx","../src/TimepickerInput.tsx","../src/utils/zoneOffsets.ts","../src/TimezonePickerInput.tsx","../src/utils/date.ts","../src/DateEditor.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\n\nimport { Datepicker } from '@contentful/f36-components';\nimport { css } from 'emotion';\n// eslint-disable-next-line -- TODO: describe this disable  no-restricted-imports\nimport moment from 'moment';\n\nconst YEAR_RANGE = 100;\n\nconst styles = {\n  root: css({\n    maxWidth: '270px',\n  }),\n};\n\nexport type DatePickerProps = {\n  value?: moment.Moment;\n  onChange: (val: moment.Moment | undefined) => void;\n  disabled?: boolean;\n};\n\nexport const DatepickerInput = (props: DatePickerProps) => {\n  const [fromDate, toDate] = useMemo(() => {\n    const fromDate = new Date();\n    fromDate.setFullYear(fromDate.getFullYear() - YEAR_RANGE);\n    const toDate = new Date();\n    toDate.setFullYear(toDate.getFullYear() + YEAR_RANGE);\n\n    return [fromDate, toDate];\n  }, []);\n\n  // The DatepickerInput should be time and timezone agnostic,\n  // thats why we don't use moment().toDate() to get Date object.\n  // moment().toDate() takes into account time and timezone and converts it\n  // based on your system timezone which can result in the date change.\n  // e.g. if user has a timezone +02:00, moment('2022-09-16T00:00+04:00').toDate()\n  // will return September 15 instead of September 16\n  const dateObj = props.value?.toObject();\n  const selectedDate = dateObj ? new Date(dateObj.years, dateObj.months, dateObj.date) : undefined;\n\n  return (\n    <Datepicker\n      className={styles.root}\n      selected={selectedDate}\n      onSelect={(day) => {\n        const momentDay = day ? moment(day) : undefined;\n        props.onChange(momentDay);\n      }}\n      inputProps={{ isDisabled: props.disabled, placeholder: '' }}\n      fromDate={fromDate}\n      toDate={toDate}\n    />\n  );\n};\n","import React, { useState, useCallback, useEffect } from 'react';\n// eslint-disable-next-line -- TODO: describe this disable  no-restricted-imports\nimport moment from 'moment';\nimport { css } from 'emotion';\n\nimport { TextInput, Flex } from '@contentful/f36-components';\n\nexport type TimepickerProps = {\n  disabled: boolean;\n  uses12hClock: boolean;\n  onChange: (value: { time: string; ampm: string }) => void;\n  time?: string;\n  ampm?: string;\n};\n\nconst validInputFormats = [\n  'hh:mm a',\n  'hh:mm A',\n  'h:mm a',\n  'h:mm A',\n  'hh:mm',\n  'k:mm',\n  'kk:mm',\n  'h a',\n  'h A',\n  'h',\n  'hh',\n  'HH',\n];\n\nfunction parseRawInput(raw: string): moment.Moment | null {\n  let time: moment.Moment | null = null;\n\n  // eslint-disable-next-line -- TODO: describe this disable  @typescript-eslint/prefer-for-of\n  for (let i = 0; i < validInputFormats.length; i++) {\n    const date = moment(raw, validInputFormats[i]);\n    if (date.isValid()) {\n      time = date;\n      break;\n    }\n  }\n\n  return time;\n}\n\nconst getDefaultTime = () => {\n  return moment(`12:00 AM`, 'hh:mm A');\n};\n\nconst formatToString = (uses12hClock: boolean, value: moment.Moment): string => {\n  return uses12hClock ? value.format('hh:mm A') : value.format('HH:mm');\n};\n\nexport const TimepickerInput = ({\n  disabled,\n  uses12hClock,\n  time = '12:00',\n  ampm = 'AM',\n  onChange,\n}: TimepickerProps) => {\n  const [selectedTime, setSelectedTime] = useState<string>(() => {\n    return formatToString(uses12hClock, getDefaultTime());\n  });\n\n  useEffect(() => {\n    setSelectedTime(formatToString(uses12hClock, moment(`${time} ${ampm}`, 'hh:mm A')));\n  }, [time, ampm, uses12hClock]);\n\n  const handleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedTime(e.currentTarget.value);\n  }, []);\n\n  const handleFocus = useCallback((e) => {\n    e.preventDefault();\n    e.target.select();\n  }, []);\n\n  const handleBlur = () => {\n    const parsedTime = parseRawInput(selectedTime);\n    const value = parsedTime ?? getDefaultTime();\n    setSelectedTime(formatToString(uses12hClock, value));\n    onChange({ time: value.format('hh:mm'), ampm: value.format('A') });\n  };\n\n  return (\n    <Flex className={css({ width: '145px' })}>\n      <TextInput\n        aria-label=\"Select time\"\n        placeholder={uses12hClock ? '12:00 AM' : '00:00'}\n        date-time-type={uses12hClock ? '12' : '24'}\n        testId=\"time-input\"\n        value={selectedTime}\n        isDisabled={disabled}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onChange={handleChange}\n      />\n    </Flex>\n  );\n};\n","export const defaultZoneOffset = '+00:00';\n\nexport const zoneOffsets = [\n  '-12:00',\n  '-11:00',\n  '-10:00',\n  '-09:30',\n  '-09:00',\n  '-08:00',\n  '-07:00',\n  '-06:00',\n  '-05:00',\n  '-04:30',\n  '-04:00',\n  '-03:30',\n  '-03:00',\n  '-02:00',\n  '-01:00',\n  '+00:00',\n  '+01:00',\n  '+02:00',\n  '+03:00',\n  '+03:30',\n  '+04:00',\n  '+04:30',\n  '+05:00',\n  '+05:30',\n  '+05:45',\n  '+06:00',\n  '+06:30',\n  '+07:00',\n  '+08:00',\n  '+08:45',\n  '+09:00',\n  '+09:30',\n  '+10:00',\n  '+10:30',\n  '+11:00',\n  '+11:30',\n  '+12:00',\n  '+12:45',\n  '+13:00',\n  '+14:00',\n];\n","import React, { ChangeEvent } from 'react';\nimport { zoneOffsets, defaultZoneOffset } from './utils/zoneOffsets';\n\nimport { Select } from '@contentful/f36-components';\n\nexport type TimezonepickerProps = {\n  disabled: boolean;\n  onChange: (value: string) => void;\n  value?: string;\n};\nexport const TimezonepickerInput = ({\n  disabled,\n  onChange,\n  value = defaultZoneOffset,\n}: TimezonepickerProps) => {\n  return (\n    <Select\n      aria-label=\"Select timezone\"\n      testId=\"timezone-input\"\n      value={value}\n      isDisabled={disabled}\n      onChange={(e: ChangeEvent<HTMLSelectElement>) => {\n        onChange(e.currentTarget.value);\n      }}>\n      {zoneOffsets.map((offset) => (\n        <Select.Option key={offset} value={offset}>\n          UTC{offset}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n};\n","// eslint-disable-next-line -- TODO: describe this disable  no-restricted-imports\nimport moment from 'moment';\nimport { TimeResult } from '../types';\n\nconst ZONE_RX = /(Z|[+-]\\d{2}[:+]?\\d{2})$/;\n\nfunction startOfToday(format: string) {\n  return moment().set({ hours: 0, minutes: 0 }).format(format);\n}\n\nfunction fieldValueToMoment(datetimeString: string | null | undefined): moment.Moment | null {\n  if (!datetimeString) {\n    return null;\n  }\n\n  const datetime = moment(datetimeString);\n  if (ZONE_RX.test(datetimeString)) {\n    datetime.utcOffset(datetimeString);\n  }\n  return datetime;\n}\n\nfunction timeFromUserInput(input: TimeResult) {\n  const timeInput = input.time || '00:00';\n  return moment.utc(timeInput + '!' + input.ampm, 'HH:mm!A');\n}\n\n/**\n * Convert the user input object into either a 'moment' value or an\n * invalid symbol.\n *\n * Success is indicated by returning '{valid: value}' and failure is\n * indicated by returning '{invalid: true}'. If 'input.date' is\n * 'null' we return '{valid: null}'\n */\nfunction datetimeFromUserInput(input: TimeResult): {\n  invalid?: boolean;\n  valid: moment.Moment | null;\n} {\n  if (!input.date) {\n    return { valid: null };\n  }\n\n  const time = timeFromUserInput(input);\n\n  const date = moment\n    .parseZone(input.utcOffset, 'Z')\n    .set(input.date.toObject())\n    .set({ hours: time.hours(), minutes: time.minutes() });\n\n  if (date.isValid()) {\n    return { valid: date };\n  } else {\n    return { invalid: true, valid: null };\n  }\n}\n\n/**\n * Parse user input into a string that is stored in the API.\n *\n * Returns a sum type with either the string as the `valid` property\n * or the `invalid` property set to `false`.\n */\nexport function buildFieldValue({\n  data,\n  usesTime,\n  usesTimezone,\n}: {\n  data: TimeResult;\n  usesTime: boolean;\n  usesTimezone: boolean;\n}) {\n  const date = datetimeFromUserInput(data);\n  if (date.invalid) {\n    return {\n      invalid: true,\n    };\n  }\n\n  let format;\n  if (usesTimezone) {\n    format = 'YYYY-MM-DDTHH:mmZ';\n  } else if (usesTime) {\n    format = 'YYYY-MM-DDTHH:mm';\n  } else {\n    format = 'YYYY-MM-DD';\n  }\n  return { valid: date?.valid ? date.valid.format(format) : null, invalid: false };\n}\n\nexport function getDefaultAMPM() {\n  return 'AM';\n}\n\nexport function getDefaultUtcOffset() {\n  return startOfToday('Z');\n}\n\n/**\n * Create the user input object from the field value.\n */\nexport function userInputFromDatetime({\n  value,\n  uses12hClock,\n}: {\n  value: string | undefined | null;\n  uses12hClock: boolean;\n}): TimeResult {\n  const datetime = fieldValueToMoment(value);\n\n  if (datetime) {\n    const timeFormat = uses12hClock ? 'hh:mm' : 'HH:mm';\n    return {\n      date: datetime,\n      time: datetime.format(timeFormat),\n      ampm: datetime.format('A'),\n      utcOffset: datetime.format('Z'),\n    };\n  } else {\n    return {\n      ampm: getDefaultAMPM(),\n      utcOffset: getDefaultUtcOffset(),\n    };\n  }\n}\n","import * as React from 'react';\nimport { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\nimport { FieldAPI, FieldConnector, ParametersAPI } from '@contentful/field-editor-shared';\nimport { DatepickerInput } from './DatepickerInput';\nimport { TimepickerInput } from './TimepickerInput';\nimport { TimezonepickerInput } from './TimezonePickerInput';\nimport {\n  userInputFromDatetime,\n  buildFieldValue,\n  getDefaultAMPM,\n  getDefaultUtcOffset,\n} from './utils/date';\nimport { TimeFormat, DateTimeFormat, TimeResult } from './types';\n\nimport { TextLink } from '@contentful/f36-components';\n\nexport interface DateEditorProps {\n  /**\n   * is the field disabled initially\n   */\n  isInitiallyDisabled: boolean;\n\n  /**\n   * sdk.field\n   */\n  field: FieldAPI;\n\n  /**\n   * sdk.parameters\n   */\n  parameters?: ParametersAPI & {\n    instance?: {\n      format?: DateTimeFormat;\n      ampm?: TimeFormat;\n    };\n  };\n}\n\nconst styles = {\n  root: css({\n    display: 'flex',\n    alignItems: 'center',\n  }),\n  separator: css({\n    marginLeft: tokens.spacingM,\n  }),\n};\n\nfunction useEffectWithoutFirstRender(callback: Function, deps: Array<any>) {\n  const isFirstRun = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    callback();\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- TODO: Evaluate the dependencies\n  }, deps);\n}\n\nfunction DateEditorContainer({\n  initialValue,\n  usesTime,\n  usesTimezone,\n  uses12hClock,\n  disabled,\n  hasClear,\n  onChange,\n}: {\n  initialValue: TimeResult;\n  usesTime: boolean;\n  usesTimezone: boolean;\n  uses12hClock: boolean;\n  disabled: boolean;\n  hasClear: boolean;\n  onChange: (value: TimeResult) => void;\n}) {\n  const [value, setValue] = React.useState<TimeResult>(() => initialValue);\n\n  useEffectWithoutFirstRender(() => {\n    onChange(value);\n  }, [value]);\n\n  return (\n    <div data-test-id=\"date-editor\" className={styles.root}>\n      <DatepickerInput\n        disabled={disabled}\n        value={value.date}\n        onChange={(date) => {\n          setValue((value) => ({\n            ...value,\n            date,\n          }));\n        }}\n      />\n      {usesTime && (\n        <>\n          <div className={styles.separator} />\n          <TimepickerInput\n            disabled={disabled}\n            time={value.time}\n            ampm={value.ampm}\n            onChange={({ time, ampm }) => {\n              setValue((value) => ({\n                ...value,\n                time,\n                ampm,\n              }));\n            }}\n            uses12hClock={uses12hClock}\n          />\n        </>\n      )}\n      {usesTimezone && (\n        <>\n          <div className={styles.separator} />\n          <TimezonepickerInput\n            disabled={disabled}\n            value={value.utcOffset}\n            onChange={(utcOffset) => {\n              setValue((value) => ({\n                ...value,\n                utcOffset,\n              }));\n            }}\n          />\n        </>\n      )}\n      {hasClear && (\n        <>\n          <div className={styles.separator} />\n          <TextLink\n            as=\"button\"\n            isDisabled={disabled}\n            testId=\"date-clear\"\n            onClick={() => {\n              setValue({\n                date: undefined,\n                time: undefined,\n                ampm: getDefaultAMPM(),\n                utcOffset: getDefaultUtcOffset(),\n              });\n            }}>\n            Clear\n          </TextLink>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport function DateEditor(props: DateEditorProps) {\n  const { field, parameters } = props;\n\n  const formatParam = parameters?.instance?.format ?? 'timeZ';\n  const ampmParam = parameters?.instance?.ampm ?? '24';\n\n  const usesTime = formatParam !== 'dateonly';\n  const usesTimezone = formatParam === 'timeZ';\n  const uses12hClock = ampmParam === '12';\n\n  return (\n    <FieldConnector<string>\n      field={field}\n      isInitiallyDisabled={props.isInitiallyDisabled}\n      throttle={0}>\n      {({ value, disabled, setValue, externalReset }) => {\n        const datetimeValue = userInputFromDatetime({\n          value,\n          uses12hClock,\n        });\n        return (\n          <DateEditorContainer\n            initialValue={datetimeValue}\n            uses12hClock={uses12hClock}\n            usesTimezone={usesTimezone}\n            usesTime={usesTime}\n            disabled={disabled}\n            hasClear={Boolean(value)}\n            onChange={(data) => {\n              const fieldValue = buildFieldValue({ data, usesTime, usesTimezone });\n              if (fieldValue.invalid) {\n                return;\n              }\n              // if value is present - then override it with a new one\n              // if value is not present - then set a new one if it's not nullable only\n              if (Boolean(value) || (!value && Boolean(fieldValue.valid))) {\n                setValue(fieldValue.valid);\n              }\n            }}\n            key={`date-container-${externalReset}`}\n          />\n        );\n      }}\n    </FieldConnector>\n  );\n}\n\nDateEditor.defaultProps = {\n  isInitiallyDisabled: true,\n};\n"],"names":["YEAR_RANGE","styles","root","css","maxWidth","DatepickerInput","props","useMemo","fromDate","Date","setFullYear","getFullYear","toDate","dateObj","value","toObject","selectedDate","years","months","date","undefined","React","Datepicker","className","selected","onSelect","day","momentDay","moment","onChange","inputProps","isDisabled","disabled","placeholder","validInputFormats","parseRawInput","raw","time","i","length","isValid","getDefaultTime","formatToString","uses12hClock","format","TimepickerInput","ampm","useState","selectedTime","setSelectedTime","useEffect","handleChange","useCallback","e","currentTarget","handleFocus","preventDefault","target","select","handleBlur","parsedTime","Flex","width","TextInput","testId","onFocus","onBlur","defaultZoneOffset","zoneOffsets","TimezonepickerInput","Select","map","offset","Option","key","ZONE_RX","startOfToday","set","hours","minutes","fieldValueToMoment","datetimeString","datetime","test","utcOffset","timeFromUserInput","input","timeInput","utc","datetimeFromUserInput","valid","parseZone","invalid","buildFieldValue","data","usesTime","usesTimezone","getDefaultAMPM","getDefaultUtcOffset","userInputFromDatetime","timeFormat","display","alignItems","separator","marginLeft","tokens","spacingM","useEffectWithoutFirstRender","callback","deps","isFirstRun","current","DateEditorContainer","initialValue","hasClear","setValue","TextLink","as","onClick","DateEditor","field","parameters","formatParam","instance","ampmParam","FieldConnector","isInitiallyDisabled","throttle","externalReset","datetimeValue","Boolean","fieldValue","defaultProps"],"mappings":"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"}