{"version":3,"file":"field-editor-dropdown.cjs.production.min.js","sources":["../src/dropdownUtils.ts","../src/styles.ts","../src/DropdownEditor.tsx"],"sourcesContent":["import { nanoid } from 'nanoid';\nimport { FieldAPI } from '@contentful/field-editor-shared';\n\ntype DropdownOption = {\n  id: string;\n  value: string | number | undefined;\n  label: string;\n};\n\nexport function parseValue(value: string, fieldType: string): string | number | undefined {\n  if (value === '') {\n    return undefined;\n  }\n  if (fieldType === 'Integer' || fieldType === 'Number') {\n    const asNumber = Number(value);\n    return isNaN(asNumber) ? undefined : asNumber;\n  }\n  return value;\n}\n\nexport function getOptions(field: FieldAPI): DropdownOption[] {\n  // Get first object that has a 'in' property\n  const validations = field.validations || [];\n  const predefinedValues = validations\n    .filter((validation) => (validation as any).in)\n    .map((validation) => (validation as any).in);\n\n  const firstPredefinedValues = predefinedValues.length > 0 ? predefinedValues[0] : [];\n\n  return firstPredefinedValues\n    .map((value: string) => ({\n      id: nanoid(6),\n      value: parseValue(value, field.type),\n      label: String(value),\n    }))\n    .filter((item: { value: string | number | undefined; label: string }) => {\n      return item.value !== undefined;\n    });\n}\n","import { css } from 'emotion';\n\nexport const rightToLeft = css({\n  direction: 'rtl',\n});\n","import * as React from 'react';\nimport {\n  FieldAPI,\n  FieldConnector,\n  PredefinedValuesError,\n  LocalesAPI,\n} from '@contentful/field-editor-shared';\nimport { getOptions, parseValue } from './dropdownUtils';\nimport * as styles from './styles';\n\nimport { Select } from '@contentful/f36-components';\n\nexport interface DropdownEditorProps {\n  /**\n   * is the field disabled initially\n   */\n  isInitiallyDisabled: boolean;\n  /**\n   * sdk.field\n   */\n  field: FieldAPI;\n\n  /**\n   * sdk.locales\n   */\n  locales: LocalesAPI;\n}\n\nexport function DropdownEditor(props: DropdownEditorProps) {\n  const { field, locales } = props;\n\n  const options = getOptions(field);\n  const misconfigured = options.length === 0;\n\n  if (misconfigured) {\n    return <PredefinedValuesError />;\n  }\n\n  const direction = locales.direction[field.locale] || 'ltr';\n\n  return (\n    <FieldConnector<string | number>\n      throttle={0}\n      field={field}\n      isInitiallyDisabled={props.isInitiallyDisabled}>\n      {({ value, errors, disabled, setValue }) => (\n        <Select\n          testId=\"dropdown-editor\"\n          isInvalid={errors.length > 0}\n          isDisabled={disabled}\n          className={direction === 'rtl' ? styles.rightToLeft : ''}\n          isRequired={field.required}\n          value={value === undefined ? '' : String(value)}\n          onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n            const value = e.target.value;\n            setValue(parseValue(value, field.type));\n          }}>\n          <Select.Option value=\"\">Choose a value</Select.Option>\n          {options.map((option) => (\n            <Select.Option key={option.value} value={String(option.value)}>\n              {option.label}\n            </Select.Option>\n          ))}\n        </Select>\n      )}\n    </FieldConnector>\n  );\n}\n\nDropdownEditor.defaultProps = {\n  isInitiallyDisabled: true,\n};\n"],"names":["parseValue","value","fieldType","asNumber","Number","isNaN","undefined","getOptions","field","predefinedValues","validations","filter","validation","map","length","id","nanoid","type","label","String","item","rightToLeft","css","direction","DropdownEditor","props","locales","options","React","PredefinedValuesError","locale","FieldConnector","throttle","isInitiallyDisabled","setValue","Select","testId","isInvalid","errors","isDisabled","disabled","className","styles","isRequired","required","onChange","e","target","Option","option","key","defaultProps"],"mappings":"kOASgBA,EAAWC,EAAeC,MAC1B,KAAVD,MAGc,YAAdC,GAAyC,WAAdA,EAAwB,KAC/CC,EAAWC,OAAOH,UACjBI,MAAMF,QAAYG,EAAYH,SAEhCF,YAGOM,EAAWC,OAGnBC,GADcD,EAAME,aAAe,IAEtCC,QAAO,SAACC,UAAgBA,QACxBC,KAAI,SAACD,UAAgBA,eAEMH,EAAiBK,OAAS,EAAIL,EAAiB,GAAK,IAG/EI,KAAI,SAACZ,SAAmB,CACvBc,GAAIC,SAAO,GACXf,MAAOD,EAAWC,EAAOO,EAAMS,MAC/BC,MAAOC,OAAOlB,OAEfU,QAAO,SAACS,eACed,IAAfc,EAAKnB,SClCX,IAAMoB,EAAcC,MAAI,CAC7BC,UAAW,iBCyBGC,EAAeC,OACrBjB,EAAmBiB,EAAnBjB,MAAOkB,EAAYD,EAAZC,QAETC,EAAUpB,EAAWC,MACc,IAAnBmB,EAAQb,cAGrBc,gBAACC,kCAGJN,EAAYG,EAAQH,UAAUf,EAAMsB,SAAW,aAGnDF,gBAACG,kBACCC,SAAU,EACVxB,MAAOA,EACPyB,oBAAqBR,EAAMQ,sBAC1B,gBAAGhC,IAAAA,MAAyBiC,IAAAA,gBAC3BN,gBAACO,UACCC,OAAO,kBACPC,YAHOC,OAGWxB,OAAS,EAC3ByB,aAJeC,SAKfC,UAAyB,QAAdlB,EAAsBmB,EAAqB,GACtDC,WAAYnC,EAAMoC,SAClB3C,WAAiBK,IAAVL,EAAsB,GAAKkB,OAAOlB,GACzC4C,SAAU,SAACC,GAETZ,EAASlC,EADK8C,EAAEC,OAAO9C,MACIO,EAAMS,SAEnCW,gBAACO,SAAOa,QAAO/C,MAAM,sBACpB0B,EAAQd,KAAI,SAACoC,UACZrB,gBAACO,SAAOa,QAAOE,IAAKD,EAAOhD,MAAOA,MAAOkB,OAAO8B,EAAOhD,QACpDgD,EAAO/B,cAStBM,EAAe2B,aAAe,CAC5BlB,qBAAqB"}