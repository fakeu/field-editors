{"version":3,"file":"field-editor-test-utils.cjs.production.min.js","sources":["../src/createFakeFieldAPI.ts","../src/createFakeLocalesAPI.ts","../src/fakesFactory.ts","../src/createFakeSpaceAPI.ts","../src/ActionsPlayground.tsx","../src/createFakeCMAAdapter.ts","../src/createFakeNavigatorAPI.ts"],"sourcesContent":["import mitt from 'mitt';\nimport type { Emitter, Handler } from 'mitt';\nimport { FieldAPI } from '@contentful/app-sdk';\n\nfunction identity<T>(item: T): T {\n  return item;\n}\n\ntype CustomizeMockFn = (fieldApi: FieldAPI) => FieldAPI;\n\nexport function createFakeFieldAPI<T>(\n  customizeMock: CustomizeMockFn = identity,\n  initialValue?: T\n): [FieldAPI, Emitter] {\n  const emitter: Emitter = mitt();\n\n  // eslint-disable-next-line -- TODO: describe this disable\n  let _value: any = initialValue;\n\n  return [\n    customizeMock({\n      id: 'fake-id',\n      locale: 'en-US',\n      type: 'Symbol',\n      validations: [],\n      required: false,\n      onValueChanged: (...args: [string, Function] | [Function]) => {\n        let fn: Function;\n        if (typeof args[0] === 'string') {\n          fn = args[1] as Function;\n        } else {\n          fn = args[0];\n        }\n        emitter.on('onValueChanged', fn as Handler);\n        return () => {\n          emitter.off('onValueChanged', fn as Handler);\n        };\n      },\n      onIsDisabledChanged: (fn: Function) => {\n        emitter.on('onIsDisabledChanged', fn as Handler);\n        return () => {\n          emitter.off('onIsDisabledChanged', fn as Handler);\n        };\n      },\n      onSchemaErrorsChanged: (fn: Function) => {\n        emitter.on('onSchemaErrorsChanged', fn as Handler);\n        return () => {\n          emitter.off('onSchemaErrorsChanged', fn as Handler);\n        };\n      },\n      getValue: () => {\n        emitter.emit('getValue');\n        return _value;\n      },\n      setInvalid: () => {\n        emitter.emit('setInvalid');\n      },\n      setValue: (value) => {\n        _value = value;\n        emitter.emit('setValue', _value);\n        emitter.emit('onValueChanged', _value);\n        return Promise.resolve(undefined);\n      },\n      removeValue: () => {\n        _value = undefined;\n        emitter.emit('removeValue');\n        emitter.emit('onValueChanged', undefined);\n        return Promise.resolve();\n      },\n    }),\n    emitter,\n  ];\n}\n","import { LocalesAPI } from '@contentful/app-sdk';\n\nfunction identity<T>(item: T): T {\n  return item;\n}\n\ntype CustomizeMockFn = (fieldApi: LocalesAPI) => LocalesAPI;\n\nexport function createFakeLocalesAPI(customizeMock: CustomizeMockFn = identity): LocalesAPI {\n  return customizeMock({\n    default: 'en-US',\n    available: ['en-US', 'de-DE'],\n    fallbacks: {\n      'en-US': undefined,\n      'de-DE': undefined,\n    },\n    names: {\n      'en-US': 'English',\n      'de-DE': 'Deutsch',\n    },\n    optional: {\n      'en-US': false,\n      'de-DE': false,\n    },\n    direction: {\n      'en-US': 'ltr',\n      'de-DE': 'ltr',\n    },\n  } as unknown as LocalesAPI);\n}\n","import { Entry } from '@contentful/field-editor-shared';\n\ninterface Fields {\n  [key: string]: {\n    // eslint-disable-next-line -- TODO: describe this disable  @typescript-eslint/no-explicit-any\n    [localeKey: string]: any;\n  };\n}\n\nexport const createEntry = (contentTypeId: string, fields: Fields): Entry => ({\n  fields,\n  sys: {\n    id: `entry-${Math.round(Math.random() * 1000)}`,\n    type: 'Entry',\n    space: { sys: { id: 'space', type: 'Link', linkType: 'Space' } },\n    environment: { sys: { id: 'e123', type: 'Link', linkType: 'Environment' } },\n    version: 2,\n    publishedVersion: 2,\n    publishedCounter: 1,\n    createdAt: '2020-02-15T17:41:01.000Z',\n    updatedAt: '2020-02-17T20:20:01.000Z',\n    publishedAt: '2020-02-18T17:41:01.000Z',\n    firstPublishedAt: '2020-02-18T17:41:01.000Z',\n    createdBy: { sys: { id: 'u123', type: 'Link', linkType: 'User' } },\n    updatedBy: { sys: { id: 'u123', type: 'Link', linkType: 'User' } },\n    publishedBy: { sys: { id: 'u123', type: 'Link', linkType: 'User' } },\n    contentType: { sys: { id: contentTypeId, type: 'Link', linkType: 'ContentType' } },\n  },\n  metadata: {\n    tags: [],\n  },\n});\n","import { ContentType, SearchQuery, SpaceAPI } from '@contentful/app-sdk';\nimport { Entry } from '@contentful/field-editor-shared';\n\nimport { createEntry } from './fakesFactory';\n\nfunction identity<T>(item: T): T {\n  return item;\n}\n\ntype CustomizeMockFn = (api: SpaceAPI) => SpaceAPI;\n\nconst testContentTypes: ContentType[] = [\n  {\n    name: 'Example Content Type',\n    sys: {\n      id: 'exampleCT',\n      type: 'ContentType',\n      space: { sys: { id: 'space', type: 'link', linkType: 'Space' } },\n      environment: { sys: { id: 'env', type: 'link', linkType: 'Environment' } },\n      version: 1,\n      createdAt: '2020-08-11T09:30:29.326Z',\n      updatedAt: '2020-08-11T09:30:29.326Z',\n    },\n    fields: [\n      {\n        id: 'exField',\n        disabled: false,\n        localized: false,\n        name: 'Example Field',\n        omitted: false,\n        required: true,\n        type: 'Symbol',\n        validations: [],\n      },\n      {\n        id: 'exDesc',\n        disabled: false,\n        localized: false,\n        name: 'Description Field',\n        omitted: false,\n        required: false,\n        type: 'Text',\n        validations: [],\n      },\n    ],\n    displayField: 'exField',\n    description: '',\n  },\n  {\n    name: 'Another Content Type',\n    sys: {\n      id: 'anotherCT',\n      type: 'ContentType',\n      space: { sys: { id: 'space', type: 'link', linkType: 'Space' } },\n      environment: { sys: { id: 'env', type: 'link', linkType: 'Environment' } },\n      version: 1,\n      createdAt: '2020-08-11T09:30:29.326Z',\n      updatedAt: '2020-08-11T09:30:29.326Z',\n    },\n    fields: [],\n    displayField: '',\n    description: '',\n  },\n];\n\nexport function createFakeSpaceAPI(customizeMock: CustomizeMockFn = identity): SpaceAPI {\n  return customizeMock({\n    getCachedContentTypes() {\n      return testContentTypes;\n    },\n    getContentTypes() {\n      return Promise.resolve({\n        items: testContentTypes,\n        total: testContentTypes.length,\n        skip: 0,\n        limit: 100,\n        sys: { type: 'Array' },\n      });\n    },\n    getEntries(query?: SearchQuery) {\n      const items: Entry[] = [\n        createEntry('exampleCT', { exField: { 'en-US': 'Hello world' } }),\n        createEntry('exampleCT', {}),\n      ];\n      return Promise.resolve({\n        items: !query || query.content_type === 'exampleCT' ? items : [],\n        total: items.length,\n        skip: 0,\n        limit: 100,\n        sys: { type: 'Array' },\n      });\n    },\n    getAssets() {\n      return Promise.resolve({\n        items: [],\n        total: 0,\n        skip: 0,\n        limit: 100,\n        sys: { type: 'Array' },\n      });\n    },\n    createEntry(contentTypeId: string) {\n      return Promise.resolve(createEntry(contentTypeId, {}));\n    },\n    createAsset() {\n      return Promise.resolve({});\n    },\n  } as unknown as SpaceAPI);\n}\n","import React from 'react';\nimport type { Emitter } from 'mitt';\nimport { css } from 'emotion';\nimport tokens from '@contentful/f36-tokens';\n\ntype EventDefinition = { type?: string; value: any; id: number };\n\ntype ActionsPlaygroundProps = {\n  mitt: Emitter;\n  renderValue: Function;\n};\n\ntype ActionPlaygroundState = {\n  events: EventDefinition[];\n};\n\ntype AddActions = { type: 'add'; payload: { type?: string; value: any } };\ntype Actions = AddActions;\n\nfunction reducer(state: ActionPlaygroundState, action: Actions): ActionPlaygroundState {\n  if (action.type === 'add') {\n    return {\n      ...state,\n      events: [\n        {\n          id: state.events.length + 1,\n          type: action.payload.type,\n          value: action.payload.value,\n        },\n        ...state.events,\n      ],\n    };\n  }\n  return state;\n}\n\nfunction ActionsPlayground(props: ActionsPlaygroundProps) {\n  const [state, dispatch] = React.useReducer(reducer, { events: [] });\n\n  const onLog = (type?: string, event?: any) => {\n    dispatch({\n      type: 'add',\n      payload: {\n        type,\n        value: event,\n      },\n    });\n  };\n\n  React.useEffect(() => {\n    props.mitt.on('*', onLog);\n\n    if ((window as any).Cypress) {\n      (window as any).editorEvents = [];\n      (window as any).setValueExternal = (value: any) => {\n        props.mitt.emit('onValueChanged', value);\n      };\n    }\n\n    return () => {\n      props.mitt.off('*', onLog);\n      (window as any).editorEvents = undefined;\n      (window as any).setValueExternal = undefined;\n    };\n  }, [props.mitt]);\n\n  React.useEffect(() => {\n    (window as any).editorEvents = [...state.events];\n  }, [props, state.events]);\n\n  return (\n    <div\n      className={css({\n        border: `1px solid ${tokens.gray200}`,\n        padding: tokens.spacingS,\n        marginTop: tokens.spacingXl,\n      })}>\n      <div\n        className={css({\n          height: 150,\n          overflowY: 'scroll',\n          fontSize: tokens.fontSizeM,\n        })}>\n        {state.events.map((log) => (\n          <div key={log.id}>\n            <div>\n              <code>\n                {log.id}. {log.type}\n              </code>\n            </div>\n            <div>{log.value ? props.renderValue(log.value, log.type) : <pre>undefined</pre>}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nActionsPlayground.defaultProps = {\n  renderValue: function JsonStringifiedValue(value: any) {\n    return <pre>{JSON.stringify(value, null, 2)}</pre>;\n  },\n};\n\nexport { ActionsPlayground };\n","import { Adapter, MRActions, MROpts } from 'contentful-management';\nimport { Except, PartialDeep } from 'type-fest';\n\ntype Options<ET extends keyof MRActions, A extends keyof MRActions[ET]> = Except<\n  MROpts<ET, A>,\n  'entityType' | 'action'\n>;\ntype Params<ET extends keyof MRActions, A extends keyof MRActions[ET]> =\n  'params' extends keyof Options<ET, A> ? Options<ET, A>['params'] : {};\ntype Return<ET extends keyof MRActions, Action extends keyof MRActions[ET]> =\n  'return' extends keyof MRActions[ET][Action]\n    ? Promise<PartialDeep<MRActions[ET][Action]['return']>>\n    : never;\n\ntype Overrides = PartialDeep<\n  {\n    [EntityType in keyof MRActions]: {\n      [Action in keyof MRActions[EntityType]]: (\n        params: Params<EntityType, Action>\n      ) => Return<EntityType, Action>;\n    };\n  }\n>;\n\nexport function createFakeCMAAdapter(overrides?: Overrides) {\n  function makeRequest({\n    entityType,\n    action,\n    params,\n  }: {\n    entityType: string;\n    action: string;\n    params: unknown;\n  }) {\n    return (\n      // @ts-expect-error\n      overrides?.[entityType]?.[action]?.(params) ??\n      Promise.reject(`Override for ${entityType}.${action} is not defined`)\n    );\n  }\n\n  return { makeRequest } as Adapter;\n}\n","export function createFakeNavigatorAPI() {\n  return {\n    openEntry(entryId: string) {\n      window.alert(`Open entry ${entryId}`);\n    },\n    openAsset(assetId: string) {\n      window.alert(`Open asset ${assetId}`);\n    },\n  };\n}\n"],"names":["identity","item","createEntry","contentTypeId","fields","sys","id","Math","round","random","type","space","linkType","environment","version","publishedVersion","publishedCounter","createdAt","updatedAt","publishedAt","firstPublishedAt","createdBy","updatedBy","publishedBy","contentType","metadata","tags","testContentTypes","name","disabled","localized","omitted","required","validations","displayField","description","reducer","state","action","events","length","payload","value","ActionsPlayground","props","React","useReducer","dispatch","onLog","event","useEffect","mitt","on","window","Cypress","editorEvents","setValueExternal","emit","off","undefined","className","css","border","tokens","gray200","padding","spacingS","marginTop","spacingXl","height","overflowY","fontSize","fontSizeM","map","log","key","renderValue","defaultProps","JSON","stringify","overrides","makeRequest","entityType","_overrides$entityType2","_overrides$entityType3","params","Promise","reject","customizeMock","initialValue","emitter","_value","locale","onValueChanged","fn","onIsDisabledChanged","onSchemaErrorsChanged","getValue","setInvalid","setValue","resolve","removeValue","available","fallbacks","names","optional","direction","openEntry","entryId","alert","openAsset","assetId","getCachedContentTypes","getContentTypes","items","total","skip","limit","getEntries","query","exField","content_type","getAssets","createAsset"],"mappings":"qPAIA,SAASA,EAAYC,UACZA,ECHT,SAASD,EAAYC,UACZA,MCMIC,EAAc,SAACC,EAAuBC,SAA2B,CAC5EA,OAAAA,EACAC,IAAK,CACHC,YAAaC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC7BC,KAAM,QACNC,MAAO,CAAEN,IAAK,CAAEC,GAAI,QAASI,KAAM,OAAQE,SAAU,UACrDC,YAAa,CAAER,IAAK,CAAEC,GAAI,OAAQI,KAAM,OAAQE,SAAU,gBAC1DE,QAAS,EACTC,iBAAkB,EAClBC,iBAAkB,EAClBC,UAAW,2BACXC,UAAW,2BACXC,YAAa,2BACbC,iBAAkB,2BAClBC,UAAW,CAAEhB,IAAK,CAAEC,GAAI,OAAQI,KAAM,OAAQE,SAAU,SACxDU,UAAW,CAAEjB,IAAK,CAAEC,GAAI,OAAQI,KAAM,OAAQE,SAAU,SACxDW,YAAa,CAAElB,IAAK,CAAEC,GAAI,OAAQI,KAAM,OAAQE,SAAU,SAC1DY,YAAa,CAAEnB,IAAK,CAAEC,GAAIH,EAAeO,KAAM,OAAQE,SAAU,iBAEnEa,SAAU,CACRC,KAAM,MCxBV,SAAS1B,EAAYC,UACZA,EAKT,IAAM0B,EAAkC,CACtC,CACEC,KAAM,uBACNvB,IAAK,CACHC,GAAI,YACJI,KAAM,cACNC,MAAO,CAAEN,IAAK,CAAEC,GAAI,QAASI,KAAM,OAAQE,SAAU,UACrDC,YAAa,CAAER,IAAK,CAAEC,GAAI,MAAOI,KAAM,OAAQE,SAAU,gBACzDE,QAAS,EACTG,UAAW,2BACXC,UAAW,4BAEbd,OAAQ,CACN,CACEE,GAAI,UACJuB,UAAU,EACVC,WAAW,EACXF,KAAM,gBACNG,SAAS,EACTC,UAAU,EACVtB,KAAM,SACNuB,YAAa,IAEf,CACE3B,GAAI,SACJuB,UAAU,EACVC,WAAW,EACXF,KAAM,oBACNG,SAAS,EACTC,UAAU,EACVtB,KAAM,OACNuB,YAAa,KAGjBC,aAAc,UACdC,YAAa,IAEf,CACEP,KAAM,uBACNvB,IAAK,CACHC,GAAI,YACJI,KAAM,cACNC,MAAO,CAAEN,IAAK,CAAEC,GAAI,QAASI,KAAM,OAAQE,SAAU,UACrDC,YAAa,CAAER,IAAK,CAAEC,GAAI,MAAOI,KAAM,OAAQE,SAAU,gBACzDE,QAAS,EACTG,UAAW,2BACXC,UAAW,4BAEbd,OAAQ,GACR8B,aAAc,GACdC,YAAa,oNC1CjB,SAASC,EAAQC,EAA8BC,SACzB,QAAhBA,EAAO5B,UAEJ2B,GACHE,QACE,CACEjC,GAAI+B,EAAME,OAAOC,OAAS,EAC1B9B,KAAM4B,EAAOG,QAAQ/B,KACrBgC,MAAOJ,EAAOG,QAAQC,eAErBL,EAAME,UAIRF,EAGT,SAASM,EAAkBC,SACCC,EAAMC,WAAWV,EAAS,CAAEG,OAAQ,KAAvDF,OAAOU,OAERC,EAAQ,SAACtC,EAAeuC,GAC5BF,EAAS,CACPrC,KAAM,MACN+B,QAAS,CACP/B,KAAAA,EACAgC,MAAOO,aAKbJ,EAAMK,WAAU,kBACdN,EAAMO,KAAKC,GAAG,IAAKJ,GAEdK,OAAeC,UACjBD,OAAeE,aAAe,GAC9BF,OAAeG,iBAAmB,SAACd,GAClCE,EAAMO,KAAKM,KAAK,iBAAkBf,KAI/B,WACLE,EAAMO,KAAKO,IAAI,IAAKV,GACnBK,OAAeE,kBAAeI,EAC9BN,OAAeG,sBAAmBG,KAEpC,CAACf,EAAMO,OAEVN,EAAMK,WAAU,WACbG,OAAeE,uBAAmBlB,EAAME,UACxC,CAACK,EAAOP,EAAME,SAGfM,uBACEe,UAAWC,MAAI,CACbC,oBAAqBC,EAAOC,QAC5BC,QAASF,EAAOG,SAChBC,UAAWJ,EAAOK,aAEpBvB,uBACEe,UAAWC,MAAI,CACbQ,OAAQ,IACRC,UAAW,SACXC,SAAUR,EAAOS,aAElBnC,EAAME,OAAOkC,KAAI,SAACC,UACjB7B,uBAAK8B,IAAKD,EAAIpE,IACZuC,2BACEA,4BACG6B,EAAIpE,QAAMoE,EAAIhE,OAGnBmC,2BAAM6B,EAAIhC,MAAQE,EAAMgC,YAAYF,EAAIhC,MAAOgC,EAAIhE,MAAQmC,+CAQvEF,EAAkBkC,aAAe,CAC/BD,YAAa,SAA8BlC,UAClCG,2BAAMiC,KAAKC,UAAUrC,EAAO,KAAM,wEC5ERsC,SAiB5B,CAAEC,kCAfPC,IAAAA,WACA5C,IAAAA,6BASE0C,YAAAA,EAAYE,cAAZC,EAA0B7C,WAA1B8C,WARFC,WASEC,QAAQC,uBAAuBL,MAAc5C,4DL1BjDkD,EACAC,YADAD,IAAAA,EAAiCxF,OAG3B0F,EAAmBvC,IAGrBwC,EAAcF,QAEX,CACLD,EAAc,CACZlF,GAAI,UACJsF,OAAQ,QACRlF,KAAM,SACNuB,YAAa,GACbD,UAAU,EACV6D,eAAgB,eACVC,SAMJJ,EAAQtC,GAAG,iBAJT0C,EADqB,2IAMhB,WACLJ,EAAQhC,IAAI,iBAAkBoC,KAGlCC,oBAAqB,SAACD,UACpBJ,EAAQtC,GAAG,sBAAuB0C,GAC3B,WACLJ,EAAQhC,IAAI,sBAAuBoC,KAGvCE,sBAAuB,SAACF,UACtBJ,EAAQtC,GAAG,wBAAyB0C,GAC7B,WACLJ,EAAQhC,IAAI,wBAAyBoC,KAGzCG,SAAU,kBACRP,EAAQjC,KAAK,YACNkC,GAETO,WAAY,WACVR,EAAQjC,KAAK,eAEf0C,SAAU,SAACzD,UAETgD,EAAQjC,KAAK,WADbkC,EAASjD,GAETgD,EAAQjC,KAAK,iBAAkBkC,GACxBL,QAAQc,aAAQzC,IAEzB0C,YAAa,kBACXV,OAAShC,EACT+B,EAAQjC,KAAK,eACbiC,EAAQjC,KAAK,sBAAkBE,GACxB2B,QAAQc,aAGnBV,0CC9DiCF,mBAAAA,IAAAA,EAAiCxF,GAC7DwF,EAAc,SACV,QACTc,UAAW,CAAC,QAAS,SACrBC,UAAW,cACA5C,eACAA,GAEX6C,MAAO,SACI,kBACA,WAEXC,SAAU,UACC,WACA,GAEXC,UAAW,SACA,cACA,0DKzBN,CACLC,mBAAUC,GACRvD,OAAOwD,oBAAoBD,IAE7BE,mBAAUC,GACR1D,OAAOwD,oBAAoBE,0CH2DEvB,mBAAAA,IAAAA,EAAiCxF,GAC3DwF,EAAc,CACnBwB,wCACSrF,GAETsF,kCACS3B,QAAQc,QAAQ,CACrBc,MAAOvF,EACPwF,MAAOxF,EAAiBa,OACxB4E,KAAM,EACNC,MAAO,IACPhH,IAAK,CAAEK,KAAM,YAGjB4G,oBAAWC,OACHL,EAAiB,CACrBhH,EAAY,YAAa,CAAEsH,QAAS,SAAW,iBAC/CtH,EAAY,YAAa,YAEpBoF,QAAQc,QAAQ,CACrBc,MAAQK,GAAgC,cAAvBA,EAAME,aAAuC,GAARP,EACtDC,MAAOD,EAAM1E,OACb4E,KAAM,EACNC,MAAO,IACPhH,IAAK,CAAEK,KAAM,YAGjBgH,4BACSpC,QAAQc,QAAQ,CACrBc,MAAO,GACPC,MAAO,EACPC,KAAM,EACNC,MAAO,IACPhH,IAAK,CAAEK,KAAM,YAGjBR,qBAAYC,UACHmF,QAAQc,QAAQlG,EAAYC,EAAe,MAEpDwH,8BACSrC,QAAQc,QAAQ"}